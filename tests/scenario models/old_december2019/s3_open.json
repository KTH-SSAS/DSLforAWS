{"vgw": {"VpnGateways": []}, "s3buckets": [], "launchconfigs": {"LaunchConfigurations": []}, "elb": {"LoadBalancerDescriptions": []}, "lambda": {"Functions": []}, "igw": {"InternetGateways": [{"Attachments": [{"State": "available", "VpcId": "vpc-0c32d3e93e4bf0963"}], "InternetGatewayId": "igw-09bfa21a4d435148b", "OwnerId": "320603597426", "Tags": [{"Key": "Name", "Value": "CloudGoat cgid35u2lwu74p Internet Gateway"}, {"Key": "Stack", "Value": "CloudGoat"}, {"Key": "Scenario", "Value": "iam-privesc-by-attachment"}]}]}, "iam": {"InstanceProfiles": [{"Path": "/", "InstanceProfileName": "cg-ec2-meek-instance-profile-cgid35u2lwu74p", "InstanceProfileId": "AIPAUVJLWVJZNGAODRIID", "Arn": "arn:aws:iam::320603597426:instance-profile/cg-ec2-meek-instance-profile-cgid35u2lwu74p", "CreateDate": "2019-12-20 08:25:32+00:00", "Roles": [{"Path": "/", "RoleName": "cg-ec2-meek-role-cgid35u2lwu74p", "RoleId": "AROAUVJLWVJZKQHKBCNP3", "Arn": "arn:aws:iam::320603597426:role/cg-ec2-meek-role-cgid35u2lwu74p", "CreateDate": "2019-12-20 08:25:31+00:00", "AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "ec2.amazonaws.com"}, "Action": "sts:AssumeRole"}]}}]}], "Groups": [], "Users": [{"Path": "/", "UserName": "kerrigan", "UserId": "AIDAUVJLWVJZKKKEOTIJS", "Arn": "arn:aws:iam::320603597426:user/kerrigan", "CreateDate": "2019-12-20 08:25:31+00:00", "AccessKeyMetadata": [{"UserName": "kerrigan", "AccessKeyId": "AKIAUVJLWVJZNOCFENF4", "Status": "Active", "CreateDate": "2019-12-20 08:25:32+00:00"}], "AttachedPolicies": [{"PolicyName": "cg-kerrigan-policy", "PolicyArn": "arn:aws:iam::320603597426:policy/cg-kerrigan-policy"}], "UserPolicies": [], "Groups": []}], "Policies": [{"PolicyName": "cg-ec2-meek-policy", "PolicyId": "ANPAUVJLWVJZKWBPHEAGC", "Arn": "arn:aws:iam::320603597426:policy/cg-ec2-meek-policy", "Path": "/", "DefaultVersionId": "v1", "AttachmentCount": 1, "PermissionsBoundaryUsageCount": 0, "IsAttachable": true, "CreateDate": "2019-12-20 08:25:31+00:00", "UpdateDate": "2019-12-20 08:25:31+00:00", "Statement": [{"Action": ["*"], "Effect": "Deny", "Resource": "*"}]}, {"PolicyName": "cg-ec2-mighty-policy", "PolicyId": "ANPAUVJLWVJZLE7TFFKK2", "Arn": "arn:aws:iam::320603597426:policy/cg-ec2-mighty-policy", "Path": "/", "DefaultVersionId": "v1", "AttachmentCount": 1, "PermissionsBoundaryUsageCount": 0, "IsAttachable": true, "CreateDate": "2019-12-20 08:25:31+00:00", "UpdateDate": "2019-12-20 08:25:31+00:00", "Statement": [{"Action": ["*"], "Effect": "Allow", "Resource": "*"}]}, {"PolicyName": "cg-kerrigan-policy", "PolicyId": "ANPAUVJLWVJZO6KSAOKBI", "Arn": "arn:aws:iam::320603597426:policy/cg-kerrigan-policy", "Path": "/", "DefaultVersionId": "v1", "AttachmentCount": 1, "PermissionsBoundaryUsageCount": 0, "IsAttachable": true, "CreateDate": "2019-12-20 08:25:31+00:00", "UpdateDate": "2019-12-20 08:25:31+00:00", "Statement": [{"Sid": "VisualEditor0", "Effect": "Allow", "Action": ["iam:ListRoles", "iam:PassRole", "iam:ListInstanceProfiles", "iam:AddRoleToInstanceProfile", "iam:RemoveRoleFromInstanceProfile", "ec2:AssociateIamInstanceProfile", "ec2:DescribeIamInstanceProfileAssociations", "ec2:RunInstances"], "Resource": "*"}, {"Sid": "VisualEditor1", "Effect": "Allow", "Action": "ec2:CreateKeyPair", "Resource": "*"}, {"Action": ["ec2:DescribeInstances", "ec2:DescribeVpcs", "ec2:DescribeSubnets", "ec2:DescribeSecurityGroups"], "Effect": "Allow", "Resource": "*"}]}, {"PolicyName": "AWSElasticLoadBalancingServiceRolePolicy", "PolicyId": "ANPAIMHWGGSRHLOQUICJQ", "Arn": "arn:aws:iam::aws:policy/aws-service-role/AWSElasticLoadBalancingServiceRolePolicy", "Path": "/aws-service-role/", "DefaultVersionId": "v4", "AttachmentCount": 1, "PermissionsBoundaryUsageCount": 0, "IsAttachable": true, "CreateDate": "2017-09-19 22:19:04+00:00", "UpdateDate": "2019-10-07 22:55:16+00:00", "Statement": [{"Effect": "Allow", "Action": ["ec2:DescribeAddresses", "ec2:DescribeInstances", "ec2:DescribeNetworkInterfaces", "ec2:DescribeSubnets", "ec2:DescribeSecurityGroups", "ec2:DescribeVpcs", "ec2:DescribeInternetGateways", "ec2:DescribeAccountAttributes", "ec2:DescribeClassicLinkInstances", "ec2:DescribeVpcClassicLink", "ec2:CreateSecurityGroup", "ec2:CreateNetworkInterface", "ec2:DeleteNetworkInterface", "ec2:ModifyNetworkInterfaceAttribute", "ec2:AuthorizeSecurityGroupIngress", "ec2:AssociateAddress", "ec2:DisassociateAddress", "ec2:AttachNetworkInterface", "ec2:DetachNetworkInterface", "ec2:AssignPrivateIpAddresses", "ec2:AssignIpv6Addresses", "ec2:UnassignIpv6Addresses", "logs:CreateLogDelivery", "logs:GetLogDelivery", "logs:UpdateLogDelivery", "logs:DeleteLogDelivery", "logs:ListLogDeliveries"], "Resource": "*"}]}, {"PolicyName": "AmazonRDSServiceRolePolicy", "PolicyId": "ANPAIPEU5ZOBJWKWHUIBA", "Arn": "arn:aws:iam::aws:policy/aws-service-role/AmazonRDSServiceRolePolicy", "Path": "/aws-service-role/", "DefaultVersionId": "v6", "AttachmentCount": 1, "PermissionsBoundaryUsageCount": 0, "IsAttachable": true, "CreateDate": "2018-01-08 18:17:46+00:00", "UpdateDate": "2019-04-16 20:12:27+00:00", "Statement": [{"Effect": "Allow", "Action": ["ec2:AuthorizeSecurityGroupIngress", "ec2:CreateNetworkInterface", "ec2:CreateSecurityGroup", "ec2:DeleteNetworkInterface", "ec2:DeleteSecurityGroup", "ec2:DescribeAvailabilityZones", "ec2:DescribeInternetGateways", "ec2:DescribeSecurityGroups", "ec2:DescribeSubnets", "ec2:DescribeVpcAttribute", "ec2:DescribeVpcs", "ec2:ModifyNetworkInterfaceAttribute", "ec2:ModifyVpcEndpoint", "ec2:RevokeSecurityGroupIngress", "ec2:CreateVpcEndpoint", "ec2:DescribeVpcEndpoints", "ec2:DeleteVpcEndpoints", "ec2:AssignPrivateIpAddresses", "ec2:UnassignPrivateIpAddresses"], "Resource": "*"}, {"Effect": "Allow", "Action": ["sns:Publish"], "Resource": "*"}, {"Effect": "Allow", "Action": ["logs:CreateLogGroup"], "Resource": ["arn:aws:logs:*:*:log-group:/aws/rds/*", "arn:aws:logs:*:*:log-group:/aws/docdb/*", "arn:aws:logs:*:*:log-group:/aws/neptune/*"]}, {"Effect": "Allow", "Action": ["logs:CreateLogStream", "logs:PutLogEvents", "logs:DescribeLogStreams"], "Resource": ["arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*", "arn:aws:logs:*:*:log-group:/aws/docdb/*:log-stream:*", "arn:aws:logs:*:*:log-group:/aws/neptune/*:log-stream:*"]}, {"Effect": "Allow", "Action": ["kinesis:CreateStream", "kinesis:PutRecord", "kinesis:PutRecords", "kinesis:DescribeStream", "kinesis:SplitShard", "kinesis:MergeShards", "kinesis:DeleteStream", "kinesis:UpdateShardCount"], "Resource": ["arn:aws:kinesis:*:*:stream/aws-rds-das-*"]}]}, {"PolicyName": "AWSSupportServiceRolePolicy", "PolicyId": "ANPAJ7W6266ELXF5MISDS", "Arn": "arn:aws:iam::aws:policy/aws-service-role/AWSSupportServiceRolePolicy", "Path": "/aws-service-role/", "DefaultVersionId": "v8", "AttachmentCount": 1, "PermissionsBoundaryUsageCount": 0, "IsAttachable": true, "CreateDate": "2018-04-19 18:04:44+00:00", "UpdateDate": "2019-12-16 19:39:42+00:00", "Statement": [{"Action": ["apigateway:GET"], "Effect": "Allow", "Resource": ["arn:aws:apigateway:*::/account", "arn:aws:apigateway:*::/apis", "arn:aws:apigateway:*::/apis/*", "arn:aws:apigateway:*::/apis/*/authorizers", "arn:aws:apigateway:*::/apis/*/authorizers/*", "arn:aws:apigateway:*::/apis/*/deployments", "arn:aws:apigateway:*::/apis/*/deployments/*", "arn:aws:apigateway:*::/apis/*/integrations", "arn:aws:apigateway:*::/apis/*/integrations/*", "arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses", "arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*", "arn:aws:apigateway:*::/apis/*/models", "arn:aws:apigateway:*::/apis/*/models/*", "arn:aws:apigateway:*::/apis/*/routes", "arn:aws:apigateway:*::/apis/*/routes/*", "arn:aws:apigateway:*::/apis/*/routes/*/routeresponses", "arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*", "arn:aws:apigateway:*::/apis/*/stages", "arn:aws:apigateway:*::/apis/*/stages/*", "arn:aws:apigateway:*::/clientcertificates", "arn:aws:apigateway:*::/clientcertificates/*", "arn:aws:apigateway:*::/domainnames", "arn:aws:apigateway:*::/domainnames/*", "arn:aws:apigateway:*::/domainnames/*/apimappings", "arn:aws:apigateway:*::/domainnames/*/apimappings/*", "arn:aws:apigateway:*::/domainnames/*/basepathmappings", "arn:aws:apigateway:*::/domainnames/*/basepathmappings/*", "arn:aws:apigateway:*::/restapis", "arn:aws:apigateway:*::/restapis/*", "arn:aws:apigateway:*::/restapis/*/authorizers", "arn:aws:apigateway:*::/restapis/*/authorizers/*", "arn:aws:apigateway:*::/restapis/*/deployments", "arn:aws:apigateway:*::/restapis/*/deployments/*", "arn:aws:apigateway:*::/restapis/*/models", "arn:aws:apigateway:*::/restapis/*/models/*", "arn:aws:apigateway:*::/restapis/*/models/*/default_template", "arn:aws:apigateway:*::/restapis/*/resources", "arn:aws:apigateway:*::/restapis/*/resources/*", "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*", "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*", "arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*", "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*", "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration", "arn:aws:apigateway:*::/restapis/*/stages", "arn:aws:apigateway:*::/restapis/*/stages/*"]}, {"Action": ["iam:DeleteRole"], "Effect": "Allow", "Resource": ["arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"]}, {"Action": ["a4b:getDevice", "a4b:getProfile", "a4b:getRoom", "a4b:getRoomSkillParameter", "a4b:getSkillGroup", "a4b:searchDevices", "a4b:searchProfiles", "a4b:searchRooms", "a4b:searchSkillGroups", "acm-pca:describeCertificateAuthority", "acm-pca:describeCertificateAuthorityAuditReport", "acm-pca:getCertificate", "acm-pca:getCertificateAuthorityCertificate", "acm-pca:getCertificateAuthorityCsr", "acm-pca:listCertificateAuthorities", "acm-pca:listTags", "acm:describeCertificate", "acm:getCertificate", "acm:listCertificates", "acm:listTagsForCertificate", "application-autoscaling:describeScalableTargets", "application-autoscaling:describeScalingActivities", "application-autoscaling:describeScalingPolicies", "appstream:describeDirectoryConfigs", "appstream:describeFleets", "appstream:describeImageBuilders", "appstream:describeImages", "appstream:describeSessions", "appstream:describeStacks", "appstream:listAssociatedFleets", "appstream:listAssociatedStacks", "appstream:listTagsForResource", "appsync:getFunction", "appsync:getGraphqlApi", "appsync:getIntrospectionSchema", "appsync:getResolver", "appsync:getSchemaCreationStatus", "appsync:getType", "appsync:listDataSources", "appsync:listFunctions", "appsync:listGraphqlApis", "appsync:listResolvers", "appsync:listTypes", "athena:batchGetNamedQuery", "athena:batchGetQueryExecution", "athena:getNamedQuery", "athena:getQueryExecution", "athena:getWorkGroup", "athena:listNamedQueries", "athena:listQueryExecutions", "athena:listTagsForResource", "athena:listWorkGroups", "autoscaling-plans:describeScalingPlanResources", "autoscaling-plans:describeScalingPlans", "autoscaling-plans:getScalingPlanResourceForecastData", "autoscaling:describeAccountLimits", "autoscaling:describeAdjustmentTypes", "autoscaling:describeAutoScalingGroups", "autoscaling:describeAutoScalingInstances", "autoscaling:describeAutoScalingNotificationTypes", "autoscaling:describeLaunchConfigurations", "autoscaling:describeLifecycleHookTypes", "autoscaling:describeLifecycleHooks", "autoscaling:describeLoadBalancerTargetGroups", "autoscaling:describeLoadBalancers", "autoscaling:describeMetricCollectionTypes", "autoscaling:describeNotificationConfigurations", "autoscaling:describePolicies", "autoscaling:describeScalingActivities", "autoscaling:describeScalingProcessTypes", "autoscaling:describeScheduledActions", "autoscaling:describeTags", "autoscaling:describeTerminationPolicyTypes", "backup:describeBackupJob", "backup:describeBackupVault", "backup:describeProtectedResource", "backup:describeRecoveryPoint", "backup:describeRestoreJob", "backup:getBackupPlan", "backup:getBackupPlanFromJSON", "backup:getBackupPlanFromTemplate", "backup:getBackupSelection", "backup:getBackupVaultAccessPolicy", "backup:getBackupVaultNotifications", "backup:getRecoveryPointRestoreMetadata", "backup:getSupportedResourceTypes", "backup:listBackupJobs", "backup:listBackupPlanTemplates", "backup:listBackupPlanVersions", "backup:listBackupPlans", "backup:listBackupSelections", "backup:listBackupVaults", "backup:listProtectedResources", "backup:listRecoveryPointsByBackupVault", "backup:listRecoveryPointsByResource", "backup:listRestoreJobs", "backup:listTags", "batch:describeComputeEnvironments", "batch:describeJobDefinitions", "batch:describeJobQueues", "batch:describeJobs", "batch:listJobs", "ce:getCostAndUsage", "ce:getDimensionValues", "ce:getReservationCoverage", "ce:getReservationUtilization", "ce:getTags", "cloud9:describeEnvironmentMemberships", "cloud9:describeEnvironments", "cloud9:listEnvironments", "clouddirectory:getDirectory", "clouddirectory:listDirectories", "cloudformation:describeAccountLimits", "cloudformation:describeChangeSet", "cloudformation:describeStackEvents", "cloudformation:describeStackInstance", "cloudformation:describeStackResource", "cloudformation:describeStackResources", "cloudformation:describeStackSet", "cloudformation:describeStackSetOperation", "cloudformation:describeStacks", "cloudformation:estimateTemplateCost", "cloudformation:getStackPolicy", "cloudformation:getTemplate", "cloudformation:getTemplateSummary", "cloudformation:listChangeSets", "cloudformation:listExports", "cloudformation:listImports", "cloudformation:listStackInstances", "cloudformation:listStackResources", "cloudformation:listStackSetOperationResults", "cloudformation:listStackSetOperations", "cloudformation:listStackSets", "cloudformation:listStacks", "cloudfront:getCloudFrontOriginAccessIdentity", "cloudfront:getCloudFrontOriginAccessIdentityConfig", "cloudfront:getDistribution", "cloudfront:getDistributionConfig", "cloudfront:getInvalidation", "cloudfront:getStreamingDistribution", "cloudfront:getStreamingDistributionConfig", "cloudfront:listCloudFrontOriginAccessIdentities", "cloudfront:listDistributions", "cloudfront:listDistributionsByWebACLId", "cloudfront:listInvalidations", "cloudfront:listStreamingDistributions", "cloudhsm:describeBackups", "cloudhsm:describeClusters", "cloudsearch:describeAnalysisSchemes", "cloudsearch:describeAvailabilityOptions", "cloudsearch:describeDomains", "cloudsearch:describeExpressions", "cloudsearch:describeIndexFields", "cloudsearch:describeScalingParameters", "cloudsearch:describeServiceAccessPolicies", "cloudsearch:describeSuggesters", "cloudsearch:listDomainNames", "cloudtrail:describeTrails", "cloudtrail:getEventSelectors", "cloudtrail:getTrailStatus", "cloudtrail:listPublicKeys", "cloudtrail:listTags", "cloudtrail:lookupEvents", "cloudwatch:describeAlarmHistory", "cloudwatch:describeAlarms", "cloudwatch:describeAlarmsForMetric", "cloudwatch:getDashboard", "cloudwatch:getMetricData", "cloudwatch:getMetricStatistics", "cloudwatch:listDashboards", "cloudwatch:listMetrics", "codebuild:batchGetBuilds", "codebuild:batchGetProjects", "codebuild:listBuilds", "codebuild:listBuildsForProject", "codebuild:listCuratedEnvironmentImages", "codebuild:listProjects", "codebuild:listSourceCredentials", "codecommit:batchGetRepositories", "codecommit:getBranch", "codecommit:getRepository", "codecommit:getRepositoryTriggers", "codecommit:listBranches", "codecommit:listRepositories", "codedeploy:batchGetApplicationRevisions", "codedeploy:batchGetApplications", "codedeploy:batchGetDeploymentGroups", "codedeploy:batchGetDeploymentInstances", "codedeploy:batchGetDeployments", "codedeploy:batchGetOnPremisesInstances", "codedeploy:getApplication", "codedeploy:getApplicationRevision", "codedeploy:getDeployment", "codedeploy:getDeploymentConfig", "codedeploy:getDeploymentGroup", "codedeploy:getDeploymentInstance", "codedeploy:getOnPremisesInstance", "codedeploy:listApplicationRevisions", "codedeploy:listApplications", "codedeploy:listDeploymentConfigs", "codedeploy:listDeploymentGroups", "codedeploy:listDeploymentInstances", "codedeploy:listDeployments", "codedeploy:listOnPremisesInstances", "codepipeline:getJobDetails", "codepipeline:getPipeline", "codepipeline:getPipelineExecution", "codepipeline:getPipelineState", "codepipeline:listActionTypes", "codepipeline:listPipelines", "codestar:describeProject", "codestar:listProjects", "codestar:listResources", "codestar:listTeamMembers", "codestar:listUserProfiles", "cognito-identity:describeIdentityPool", "cognito-identity:getIdentityPoolRoles", "cognito-identity:listIdentities", "cognito-identity:listIdentityPools", "cognito-idp:adminGetUser", "cognito-idp:describeIdentityProvider", "cognito-idp:describeResourceServer", "cognito-idp:describeRiskConfiguration", "cognito-idp:describeUserImportJob", "cognito-idp:describeUserPool", "cognito-idp:describeUserPoolClient", "cognito-idp:describeUserPoolDomain", "cognito-idp:getGroup", "cognito-idp:getUICustomization", "cognito-idp:getUser", "cognito-idp:getUserPoolMfaConfig", "cognito-idp:listGroups", "cognito-idp:listIdentityProviders", "cognito-idp:listResourceServers", "cognito-idp:listUserImportJobs", "cognito-idp:listUserPoolClients", "cognito-idp:listUserPools", "cognito-sync:describeDataset", "cognito-sync:describeIdentityPoolUsage", "cognito-sync:describeIdentityUsage", "cognito-sync:getCognitoEvents", "cognito-sync:getIdentityPoolConfiguration", "cognito-sync:listDatasets", "cognito-sync:listIdentityPoolUsage", "config:describeConfigRuleEvaluationStatus", "config:describeConfigRules", "config:describeConfigurationRecorderStatus", "config:describeConfigurationRecorders", "config:describeDeliveryChannelStatus", "config:describeDeliveryChannels", "config:getResourceConfigHistory", "config:listDiscoveredResources", "connect:describeUser", "connect:getCurrentMetricData", "connect:getMetricData", "connect:listRoutingProfiles", "connect:listSecurityProfiles", "connect:listUsers", "datapipeline:describeObjects", "datapipeline:describePipelines", "datapipeline:getPipelineDefinition", "datapipeline:listPipelines", "datapipeline:queryObjects", "datasync:describeAgent", "datasync:describeLocationEfs", "datasync:describeLocationNfs", "datasync:describeLocationS3", "datasync:describeTask", "datasync:describeTaskExecution", "datasync:listAgents", "datasync:listLocations", "datasync:listTaskExecutions", "datasync:listTasks", "dax:describeClusters", "dax:describeDefaultParameters", "dax:describeEvents", "dax:describeParameterGroups", "dax:describeParameters", "dax:describeSubnetGroups", "devicefarm:getAccountSettings", "devicefarm:getDevice", "devicefarm:getDevicePool", "devicefarm:getDevicePoolCompatibility", "devicefarm:getJob", "devicefarm:getProject", "devicefarm:getRemoteAccessSession", "devicefarm:getRun", "devicefarm:getSuite", "devicefarm:getTest", "devicefarm:getUpload", "devicefarm:listArtifacts", "devicefarm:listDevicePools", "devicefarm:listDevices", "devicefarm:listJobs", "devicefarm:listProjects", "devicefarm:listRemoteAccessSessions", "devicefarm:listRuns", "devicefarm:listSamples", "devicefarm:listSuites", "devicefarm:listTests", "devicefarm:listUniqueProblems", "devicefarm:listUploads", "directconnect:describeConnections", "directconnect:describeConnectionsOnInterconnect", "directconnect:describeInterconnects", "directconnect:describeLocations", "directconnect:describeVirtualGateways", "directconnect:describeVirtualInterfaces", "dlm:getLifecyclePolicies", "dlm:getLifecyclePolicy", "dms:describeAccountAttributes", "dms:describeConnections", "dms:describeEndpointTypes", "dms:describeEndpoints", "dms:describeOrderableReplicationInstances", "dms:describeRefreshSchemasStatus", "dms:describeReplicationInstances", "dms:describeReplicationSubnetGroups", "ds:describeConditionalForwarders", "ds:describeDirectories", "ds:describeEventTopics", "ds:describeSnapshots", "ds:describeTrusts", "ds:getDirectoryLimits", "ds:getSnapshotLimits", "ds:listIpRoutes", "ds:listSchemaExtensions", "ds:listTagsForResource", "dynamodb:describeBackup", "dynamodb:describeContinuousBackups", "dynamodb:describeGlobalTable", "dynamodb:describeLimits", "dynamodb:describeStream", "dynamodb:describeTable", "dynamodb:describeTimeToLive", "dynamodb:listBackups", "dynamodb:listGlobalTables", "dynamodb:listStreams", "dynamodb:listTables", "dynamodb:listTagsOfResource", "ec2:acceptReservedInstancesExchangeQuote", "ec2:cancelReservedInstancesListing", "ec2:createReservedInstancesListing", "ec2:describeAccountAttributes", "ec2:describeAddresses", "ec2:describeAvailabilityZones", "ec2:describeBundleTasks", "ec2:describeByoipCidrs", "ec2:describeCapacityReservations", "ec2:describeClassicLinkInstances", "ec2:describeClientVpnAuthorizationRules", "ec2:describeClientVpnConnections", "ec2:describeClientVpnEndpoints", "ec2:describeClientVpnRoutes", "ec2:describeClientVpnTargetNetworks", "ec2:describeConversionTasks", "ec2:describeCustomerGateways", "ec2:describeDhcpOptions", "ec2:describeElasticGpus", "ec2:describeExportTasks", "ec2:describeFleetHistory", "ec2:describeFleetInstances", "ec2:describeFleets", "ec2:describeFlowLogs", "ec2:describeHostReservationOfferings", "ec2:describeHostReservations", "ec2:describeHosts", "ec2:describeIdFormat", "ec2:describeIdentityIdFormat", "ec2:describeImageAttribute", "ec2:describeImages", "ec2:describeImportImageTasks", "ec2:describeImportSnapshotTasks", "ec2:describeInstanceAttribute", "ec2:describeInstanceStatus", "ec2:describeInstances", "ec2:describeInternetGateways", "ec2:describeKeyPairs", "ec2:describeLaunchTemplateVersions", "ec2:describeLaunchTemplates", "ec2:describeMovingAddresses", "ec2:describeNatGateways", "ec2:describeNetworkAcls", "ec2:describeNetworkInterfaceAttribute", "ec2:describeNetworkInterfaces", "ec2:describePlacementGroups", "ec2:describePrefixLists", "ec2:describePublicIpv4Pools", "ec2:describeRegions", "ec2:describeReservedInstances", "ec2:describeReservedInstancesListings", "ec2:describeReservedInstancesModifications", "ec2:describeReservedInstancesOfferings", "ec2:describeRouteTables", "ec2:describeScheduledInstances", "ec2:describeSecurityGroups", "ec2:describeSnapshotAttribute", "ec2:describeSnapshots", "ec2:describeSpotDatafeedSubscription", "ec2:describeSpotFleetInstances", "ec2:describeSpotFleetRequestHistory", "ec2:describeSpotFleetRequests", "ec2:describeSpotInstanceRequests", "ec2:describeSpotPriceHistory", "ec2:describeSubnets", "ec2:describeTags", "ec2:describeTransitGatewayAttachments", "ec2:describeTransitGatewayRouteTables", "ec2:describeTransitGatewayVpcAttachments", "ec2:describeTransitGateways", "ec2:describeVolumeAttribute", "ec2:describeVolumeStatus", "ec2:describeVolumes", "ec2:describeVolumesModifications", "ec2:describeVpcAttribute", "ec2:describeVpcClassicLink", "ec2:describeVpcClassicLinkDnsSupport", "ec2:describeVpcEndpointConnectionNotifications", "ec2:describeVpcEndpointConnections", "ec2:describeVpcEndpointServiceConfigurations", "ec2:describeVpcEndpointServicePermissions", "ec2:describeVpcEndpointServices", "ec2:describeVpcEndpoints", "ec2:describeVpcPeeringConnections", "ec2:describeVpcs", "ec2:describeVpnConnections", "ec2:describeVpnGateways", "ec2:getConsoleScreenshot", "ec2:getReservedInstancesExchangeQuote", "ec2:getTransitGatewayAttachmentPropagations", "ec2:getTransitGatewayRouteTableAssociations", "ec2:getTransitGatewayRouteTablePropagations", "ec2:modifyReservedInstances", "ec2:purchaseReservedInstancesOffering", "ecr:batchCheckLayerAvailability", "ecr:describeImages", "ecr:describeRepositories", "ecr:getRepositoryPolicy", "ecr:listImages", "ecs:describeClusters", "ecs:describeContainerInstances", "ecs:describeServices", "ecs:describeTaskDefinition", "ecs:describeTasks", "ecs:listClusters", "ecs:listContainerInstances", "ecs:listServices", "ecs:listTaskDefinitions", "ecs:listTasks", "eks:describeCluster", "eks:describeUpdate", "eks:listClusters", "eks:listUpdates", "elasticache:describeCacheClusters", "elasticache:describeCacheEngineVersions", "elasticache:describeCacheParameterGroups", "elasticache:describeCacheParameters", "elasticache:describeCacheSecurityGroups", "elasticache:describeCacheSubnetGroups", "elasticache:describeEngineDefaultParameters", "elasticache:describeEvents", "elasticache:describeReplicationGroups", "elasticache:describeReservedCacheNodes", "elasticache:describeReservedCacheNodesOfferings", "elasticache:describeSnapshots", "elasticache:listAllowedNodeTypeModifications", "elasticache:listTagsForResource", "elasticbeanstalk:checkDNSAvailability", "elasticbeanstalk:describeApplicationVersions", "elasticbeanstalk:describeApplications", "elasticbeanstalk:describeConfigurationOptions", "elasticbeanstalk:describeConfigurationSettings", "elasticbeanstalk:describeEnvironmentHealth", "elasticbeanstalk:describeEnvironmentManagedActionHistory", "elasticbeanstalk:describeEnvironmentManagedActions", "elasticbeanstalk:describeEnvironmentResources", "elasticbeanstalk:describeEnvironments", "elasticbeanstalk:describeEvents", "elasticbeanstalk:describeInstancesHealth", "elasticbeanstalk:describePlatformVersion", "elasticbeanstalk:listAvailableSolutionStacks", "elasticbeanstalk:listPlatformVersions", "elasticbeanstalk:validateConfigurationSettings", "elasticfilesystem:describeFileSystems", "elasticfilesystem:describeLifecycleConfiguration", "elasticfilesystem:describeMountTargetSecurityGroups", "elasticfilesystem:describeMountTargets", "elasticfilesystem:describeTags", "elasticloadbalancing:describeInstanceHealth", "elasticloadbalancing:describeListenerCertificates", "elasticloadbalancing:describeListeners", "elasticloadbalancing:describeLoadBalancerAttributes", "elasticloadbalancing:describeLoadBalancerPolicies", "elasticloadbalancing:describeLoadBalancerPolicyTypes", "elasticloadbalancing:describeLoadBalancers", "elasticloadbalancing:describeRules", "elasticloadbalancing:describeSSLPolicies", "elasticloadbalancing:describeTags", "elasticloadbalancing:describeTargetGroupAttributes", "elasticloadbalancing:describeTargetGroups", "elasticloadbalancing:describeTargetHealth", "elasticmapreduce:describeCluster", "elasticmapreduce:describeSecurityConfiguration", "elasticmapreduce:describeStep", "elasticmapreduce:listBootstrapActions", "elasticmapreduce:listClusters", "elasticmapreduce:listInstanceGroups", "elasticmapreduce:listInstances", "elasticmapreduce:listSecurityConfigurations", "elasticmapreduce:listSteps", "elastictranscoder:listJobsByPipeline", "elastictranscoder:listJobsByStatus", "elastictranscoder:listPipelines", "elastictranscoder:listPresets", "elastictranscoder:readPipeline", "elastictranscoder:readPreset", "es:describeElasticsearchDomain", "es:describeElasticsearchDomainConfig", "es:describeElasticsearchDomains", "es:listDomainNames", "es:listTags", "events:describeEventBus", "events:describeRule", "events:listRuleNamesByTarget", "events:listRules", "events:listTargetsByRule", "events:testEventPattern", "firehose:describeDeliveryStream", "firehose:listDeliveryStreams", "forecast:describeDataset", "forecast:describeDatasetGroup", "forecast:describeDatasetImportJob", "forecast:describeForecast", "forecast:describeForecastExportJob", "forecast:describePredictor", "forecast:getAccuracyMetrics", "forecast:listDatasetGroups", "forecast:listDatasetImportJobs", "forecast:listDatasets", "forecast:listForecastExportJobs", "forecast:listForecasts", "forecast:listPredictors", "fsx:describeBackups", "fsx:describeFileSystems", "fsx:listTagsForResource", "glacier:describeJob", "glacier:describeVault", "glacier:getDataRetrievalPolicy", "glacier:getVaultAccessPolicy", "glacier:getVaultLock", "glacier:getVaultNotifications", "glacier:listJobs", "glacier:listTagsForVault", "glacier:listVaults", "globalaccelerator:describeAccelerator", "globalaccelerator:describeAcceleratorAttributes", "globalaccelerator:describeEndpointGroup", "globalaccelerator:describeListener", "globalaccelerator:listAccelerators", "globalaccelerator:listEndpointGroups", "globalaccelerator:listListeners", "glue:batchGetPartition", "glue:getCatalogImportStatus", "glue:getClassifier", "glue:getClassifiers", "glue:getCrawler", "glue:getCrawlerMetrics", "glue:getCrawlers", "glue:getDatabase", "glue:getDatabases", "glue:getDataflowGraph", "glue:getDevEndpoint", "glue:getDevEndpoints", "glue:getJob", "glue:getJobRun", "glue:getJobRuns", "glue:getJobs", "glue:getMapping", "glue:getPartition", "glue:getPartitions", "glue:getTable", "glue:getTableVersions", "glue:getTables", "glue:getTrigger", "glue:getTriggers", "glue:getUserDefinedFunction", "glue:getUserDefinedFunctions", "greengrass:getConnectivityInfo", "greengrass:getCoreDefinition", "greengrass:getCoreDefinitionVersion", "greengrass:getDeploymentStatus", "greengrass:getDeviceDefinition", "greengrass:getDeviceDefinitionVersion", "greengrass:getFunctionDefinition", "greengrass:getFunctionDefinitionVersion", "greengrass:getGroup", "greengrass:getGroupCertificateAuthority", "greengrass:getGroupVersion", "greengrass:getLoggerDefinition", "greengrass:getLoggerDefinitionVersion", "greengrass:getResourceDefinitionVersion", "greengrass:getServiceRoleForAccount", "greengrass:getSubscriptionDefinition", "greengrass:getSubscriptionDefinitionVersion", "greengrass:listCoreDefinitionVersions", "greengrass:listCoreDefinitions", "greengrass:listDeployments", "greengrass:listDeviceDefinitionVersions", "greengrass:listDeviceDefinitions", "greengrass:listFunctionDefinitionVersions", "greengrass:listFunctionDefinitions", "greengrass:listGroupVersions", "greengrass:listGroups", "greengrass:listLoggerDefinitionVersions", "greengrass:listLoggerDefinitions", "greengrass:listResourceDefinitionVersions", "greengrass:listResourceDefinitions", "greengrass:listSubscriptionDefinitionVersions", "greengrass:listSubscriptionDefinitions", "guardduty:getDetector", "guardduty:getFindings", "guardduty:getFindingsStatistics", "guardduty:getIPSet", "guardduty:getInvitationsCount", "guardduty:getMasterAccount", "guardduty:getMembers", "guardduty:getThreatIntelSet", "guardduty:listDetectors", "guardduty:listFindings", "guardduty:listIPSets", "guardduty:listInvitations", "guardduty:listMembers", "guardduty:listThreatIntelSets", "health:describeAffectedEntities", "health:describeEntityAggregates", "health:describeEventAggregates", "health:describeEventDetails", "health:describeEventTypes", "health:describeEvents", "iam:getAccessKeyLastUsed", "iam:getAccountAuthorizationDetails", "iam:getAccountPasswordPolicy", "iam:getAccountSummary", "iam:getContextKeysForCustomPolicy", "iam:getContextKeysForPrincipalPolicy", "iam:getCredentialReport", "iam:getGroup", "iam:getGroupPolicy", "iam:getInstanceProfile", "iam:getLoginProfile", "iam:getOpenIDConnectProvider", "iam:getPolicy", "iam:getPolicyVersion", "iam:getRole", "iam:getRolePolicy", "iam:getSAMLProvider", "iam:getSSHPublicKey", "iam:getServerCertificate", "iam:getUser", "iam:getUserPolicy", "iam:listAccessKeys", "iam:listAccountAliases", "iam:listAttachedGroupPolicies", "iam:listAttachedRolePolicies", "iam:listAttachedUserPolicies", "iam:listEntitiesForPolicy", "iam:listGroupPolicies", "iam:listGroups", "iam:listGroupsForUser", "iam:listInstanceProfiles", "iam:listInstanceProfilesForRole", "iam:listMFADevices", "iam:listOpenIDConnectProviders", "iam:listPolicies", "iam:listPolicyVersions", "iam:listRolePolicies", "iam:listRoles", "iam:listSAMLProviders", "iam:listSSHPublicKeys", "iam:listServerCertificates", "iam:listSigningCertificates", "iam:listUserPolicies", "iam:listUsers", "iam:listVirtualMFADevices", "iam:simulateCustomPolicy", "iam:simulatePrincipalPolicy", "importexport:getStatus", "importexport:listJobs", "inspector:describeAssessmentRuns", "inspector:describeAssessmentTargets", "inspector:describeAssessmentTemplates", "inspector:describeCrossAccountAccessRole", "inspector:describeResourceGroups", "inspector:describeRulesPackages", "inspector:getTelemetryMetadata", "inspector:listAssessmentRunAgents", "inspector:listAssessmentRuns", "inspector:listAssessmentTargets", "inspector:listAssessmentTemplates", "inspector:listEventSubscriptions", "inspector:listRulesPackages", "inspector:listTagsForResource", "iot:describeAuthorizer", "iot:describeCACertificate", "iot:describeCertificate", "iot:describeDefaultAuthorizer", "iot:describeEndpoint", "iot:describeIndex", "iot:describeJobExecution", "iot:describeThing", "iot:describeThingGroup", "iot:getEffectivePolicies", "iot:getIndexingConfiguration", "iot:getLoggingOptions", "iot:getPolicy", "iot:getPolicyVersion", "iot:getTopicRule", "iot:getV2LoggingOptions", "iot:listAttachedPolicies", "iot:listAuthorizers", "iot:listCACertificates", "iot:listCertificates", "iot:listCertificatesByCA", "iot:listJobExecutionsForJob", "iot:listJobExecutionsForThing", "iot:listJobs", "iot:listOutgoingCertificates", "iot:listPolicies", "iot:listPolicyPrincipals", "iot:listPolicyVersions", "iot:listPrincipalPolicies", "iot:listPrincipalThings", "iot:listRoleAliases", "iot:listTargetsForPolicy", "iot:listThingGroups", "iot:listThingGroupsForThing", "iot:listThingPrincipals", "iot:listThingRegistrationTasks", "iot:listThingTypes", "iot:listThings", "iot:listTopicRules", "iot:listV2LoggingLevels", "iotevents:describeDetector", "iotevents:describeDetectorModel", "iotevents:describeInput", "iotevents:describeLoggingOptions", "iotevents:listDetectorModelVersions", "iotevents:listDetectorModels", "iotevents:listDetectors", "iotevents:listInputs", "kafka:describeCluster", "kafka:getBootstrapBrokers", "kafka:listClusters", "kafka:listNodes", "kinesis:describeStream", "kinesis:listStreams", "kinesis:listTagsForStream", "kinesisanalytics:describeApplication", "kinesisanalytics:listApplications", "kms:describeKey", "kms:getKeyPolicy", "kms:getKeyRotationStatus", "kms:listAliases", "kms:listGrants", "kms:listKeyPolicies", "kms:listKeys", "kms:listResourceTags", "kms:listRetirableGrants", "lambda:getAccountSettings", "lambda:getAlias", "lambda:getEventSourceMapping", "lambda:getFunction", "lambda:getFunctionConfiguration", "lambda:getLayerVersion", "lambda:getLayerVersionPolicy", "lambda:getPolicy", "lambda:listAliases", "lambda:listEventSourceMappings", "lambda:listFunctions", "lambda:listLayerVersions", "lambda:listLayers", "lambda:listVersionsByFunction", "lex:getBot", "lex:getBotAlias", "lex:getBotAliases", "lex:getBotChannelAssociation", "lex:getBotChannelAssociations", "lex:getBotVersions", "lex:getBots", "lex:getBuiltinIntent", "lex:getBuiltinIntents", "lex:getBuiltinSlotTypes", "lex:getIntent", "lex:getIntentVersions", "lex:getIntents", "lex:getSlotType", "lex:getSlotTypeVersions", "lex:getSlotTypes", "lightsail:getActiveNames", "lightsail:getBlueprints", "lightsail:getBundles", "lightsail:getDomain", "lightsail:getDomains", "lightsail:getInstance", "lightsail:getInstanceAccessDetails", "lightsail:getInstanceMetricData", "lightsail:getInstancePortStates", "lightsail:getInstanceSnapshot", "lightsail:getInstanceSnapshots", "lightsail:getInstanceState", "lightsail:getInstances", "lightsail:getKeyPair", "lightsail:getKeyPairs", "lightsail:getOperation", "lightsail:getOperations", "lightsail:getOperationsForResource", "lightsail:getRegions", "lightsail:getStaticIp", "lightsail:getStaticIps", "logs:describeDestinations", "logs:describeExportTasks", "logs:describeLogGroups", "logs:describeLogStreams", "logs:describeMetricFilters", "logs:describeQueries", "logs:describeSubscriptionFilters", "logs:testMetricFilter", "machinelearning:describeBatchPredictions", "machinelearning:describeDataSources", "machinelearning:describeEvaluations", "machinelearning:describeMLModels", "machinelearning:getBatchPrediction", "machinelearning:getDataSource", "machinelearning:getEvaluation", "machinelearning:getMLModel", "managedblockchain:getMember", "managedblockchain:getNetwork", "managedblockchain:getNode", "managedblockchain:listMembers", "managedblockchain:listNetworks", "managedblockchain:listNodes", "mediaconvert:describeEndpoints", "mediaconvert:getJob", "mediaconvert:getJobTemplate", "mediaconvert:getPreset", "mediaconvert:getQueue", "mediaconvert:listJobTemplates", "mediaconvert:listJobs", "medialive:describeChannel", "medialive:describeInput", "medialive:describeInputSecurityGroup", "medialive:describeOffering", "medialive:describeReservation", "medialive:describeSchedule", "medialive:listChannels", "medialive:listInputSecurityGroups", "medialive:listInputs", "medialive:listOfferings", "medialive:listReservations", "mediapackage:describeChannel", "mediapackage:describeOriginEndpoint", "mediapackage:listChannels", "mediapackage:listOriginEndpoints", "mediastore:describeContainer", "mediastore:describeObject", "mediastore:getContainerPolicy", "mediastore:getCorsPolicy", "mediastore:listContainers", "mediastore:listItems", "mediatailor:getPlaybackConfiguration", "mediatailor:listPlaybackConfigurations", "mobiletargeting:getAdmChannel", "mobiletargeting:getApnsChannel", "mobiletargeting:getApnsSandboxChannel", "mobiletargeting:getApnsVoipChannel", "mobiletargeting:getApnsVoipSandboxChannel", "mobiletargeting:getApp", "mobiletargeting:getApplicationSettings", "mobiletargeting:getApps", "mobiletargeting:getBaiduChannel", "mobiletargeting:getCampaign", "mobiletargeting:getCampaignActivities", "mobiletargeting:getCampaignVersion", "mobiletargeting:getCampaignVersions", "mobiletargeting:getCampaigns", "mobiletargeting:getEmailChannel", "mobiletargeting:getEndpoint", "mobiletargeting:getEventStream", "mobiletargeting:getExportJob", "mobiletargeting:getExportJobs", "mobiletargeting:getGcmChannel", "mobiletargeting:getImportJob", "mobiletargeting:getImportJobs", "mobiletargeting:getSegment", "mobiletargeting:getSegmentImportJobs", "mobiletargeting:getSegmentVersion", "mobiletargeting:getSegmentVersions", "mobiletargeting:getSegments", "mobiletargeting:getSmsChannel", "mq:describeBroker", "mq:describeConfiguration", "mq:describeConfigurationRevision", "mq:describeUser", "mq:listBrokers", "mq:listConfigurationRevisions", "mq:listConfigurations", "mq:listUsers", "opsworks-cm:describeAccountAttributes", "opsworks-cm:describeBackups", "opsworks-cm:describeEvents", "opsworks-cm:describeNodeAssociationStatus", "opsworks-cm:describeServers", "opsworks:describeAgentVersions", "opsworks:describeApps", "opsworks:describeCommands", "opsworks:describeDeployments", "opsworks:describeEcsClusters", "opsworks:describeElasticIps", "opsworks:describeElasticLoadBalancers", "opsworks:describeInstances", "opsworks:describeLayers", "opsworks:describeLoadBasedAutoScaling", "opsworks:describeMyUserProfile", "opsworks:describePermissions", "opsworks:describeRaidArrays", "opsworks:describeRdsDbInstances", "opsworks:describeServiceErrors", "opsworks:describeStackProvisioningParameters", "opsworks:describeStackSummary", "opsworks:describeStacks", "opsworks:describeTimeBasedAutoScaling", "opsworks:describeUserProfiles", "opsworks:describeVolumes", "opsworks:getHostnameSuggestion", "personalize:describeAlgorithm", "personalize:describeCampaign", "personalize:describeDataset", "personalize:describeDatasetGroup", "personalize:describeDatasetImportJob", "personalize:describeEventTracker", "personalize:describeFeatureTransformation", "personalize:describeRecipe", "personalize:describeSchema", "personalize:describeSolution", "personalize:describeSolutionVersion", "personalize:listCampaigns", "personalize:listDatasetGroups", "personalize:listDatasetImportJobs", "personalize:listDatasets", "personalize:listEventTrackers", "personalize:listRecipes", "personalize:listSchemas", "personalize:listSolutionVersions", "personalize:listSolutions", "polly:describeVoices", "polly:getLexicon", "polly:listLexicons", "pricing:describeServices", "pricing:getAttributeValues", "pricing:getProducts", "rds:describeAccountAttributes", "rds:describeCertificates", "rds:describeDBClusterParameterGroups", "rds:describeDBClusterParameters", "rds:describeDBClusterSnapshots", "rds:describeDBClusters", "rds:describeDBEngineVersions", "rds:describeDBInstances", "rds:describeDBParameterGroups", "rds:describeDBParameters", "rds:describeDBSecurityGroups", "rds:describeDBSnapshotAttributes", "rds:describeDBSnapshots", "rds:describeDBSubnetGroups", "rds:describeEngineDefaultClusterParameters", "rds:describeEngineDefaultParameters", "rds:describeEventCategories", "rds:describeEventSubscriptions", "rds:describeEvents", "rds:describeOptionGroupOptions", "rds:describeOptionGroups", "rds:describeOrderableDBInstanceOptions", "rds:describePendingMaintenanceActions", "rds:describeReservedDBInstances", "rds:describeReservedDBInstancesOfferings", "rds:listTagsForResource", "redshift:describeClusterParameterGroups", "redshift:describeClusterParameters", "redshift:describeClusterSecurityGroups", "redshift:describeClusterSnapshots", "redshift:describeClusterSubnetGroups", "redshift:describeClusterVersions", "redshift:describeClusters", "redshift:describeDefaultClusterParameters", "redshift:describeEventCategories", "redshift:describeEventSubscriptions", "redshift:describeEvents", "redshift:describeHsmClientCertificates", "redshift:describeHsmConfigurations", "redshift:describeLoggingStatus", "redshift:describeOrderableClusterOptions", "redshift:describeReservedNodeOfferings", "redshift:describeReservedNodes", "redshift:describeResize", "redshift:describeSnapshotCopyGrants", "redshift:describeTableRestoreStatus", "redshift:describeTags", "rekognition:listCollections", "rekognition:listFaces", "robomaker:batchDescribeSimulationJob", "robomaker:describeDeploymentJob", "robomaker:describeFleet", "robomaker:describeRobot", "robomaker:describeRobotApplication", "robomaker:describeSimulationApplication", "robomaker:describeSimulationJob", "robomaker:listDeploymentJobs", "robomaker:listFleets", "robomaker:listRobotApplications", "robomaker:listRobots", "robomaker:listSimulationApplications", "robomaker:listSimulationJobs", "route53:getChange", "route53:getCheckerIpRanges", "route53:getGeoLocation", "route53:getHealthCheck", "route53:getHealthCheckCount", "route53:getHealthCheckLastFailureReason", "route53:getHealthCheckStatus", "route53:getHostedZone", "route53:getHostedZoneCount", "route53:getReusableDelegationSet", "route53:getTrafficPolicy", "route53:getTrafficPolicyInstance", "route53:getTrafficPolicyInstanceCount", "route53:listGeoLocations", "route53:listHealthChecks", "route53:listHostedZones", "route53:listHostedZonesByName", "route53:listResourceRecordSets", "route53:listReusableDelegationSets", "route53:listTagsForResource", "route53:listTagsForResources", "route53:listTrafficPolicies", "route53:listTrafficPolicyInstances", "route53:listTrafficPolicyInstancesByHostedZone", "route53:listTrafficPolicyInstancesByPolicy", "route53:listTrafficPolicyVersions", "route53domains:checkDomainAvailability", "route53domains:getContactReachabilityStatus", "route53domains:getDomainDetail", "route53domains:getOperationDetail", "route53domains:listDomains", "route53domains:listOperations", "route53domains:listTagsForDomain", "route53domains:viewBilling", "route53resolver:getResolverRulePolicy", "route53resolver:listResolverEndpointIpAddresses", "route53resolver:listResolverEndpoints", "route53resolver:listResolverRuleAssociations", "route53resolver:listResolverRules", "route53resolver:listTagsForResource", "s3:getAccelerateConfiguration", "s3:getAnalyticsConfiguration", "s3:getBucketAcl", "s3:getBucketCORS", "s3:getBucketLocation", "s3:getBucketLogging", "s3:getBucketNotification", "s3:getBucketPolicy", "s3:getBucketRequestPayment", "s3:getBucketTagging", "s3:getBucketVersioning", "s3:getBucketWebsite", "s3:getEncryptionConfiguration", "s3:getInventoryConfiguration", "s3:getLifecycleConfiguration", "s3:getMetricsConfiguration", "s3:getReplicationConfiguration", "s3:listBucket", "s3:listAllMyBuckets", "s3:listBucketMultipartUploads", "sagemaker:describeAlgorithm", "sagemaker:describeCompilationJob", "sagemaker:describeEndpoint", "sagemaker:describeEndpointConfig", "sagemaker:describeHyperParameterTuningJob", "sagemaker:describeLabelingJob", "sagemaker:describeModel", "sagemaker:describeModelPackage", "sagemaker:describeNotebookInstance", "sagemaker:describeNotebookInstanceLifecycleConfig", "sagemaker:describeTrainingJob", "sagemaker:describeTransformJob", "sagemaker:describeWorkteam", "sagemaker:listAlgorithms", "sagemaker:listCompilationJobs", "sagemaker:listEndpointConfigs", "sagemaker:listEndpoints", "sagemaker:listHyperParameterTuningJobs", "sagemaker:listLabelingJobs", "sagemaker:listLabelingJobsForWorkteam", "sagemaker:listModelPackages", "sagemaker:listModels", "sagemaker:listNotebookInstanceLifecycleConfigs", "sagemaker:listNotebookInstances", "sagemaker:listTags", "sagemaker:listTrainingJobs", "sagemaker:listTrainingJobsForHyperParameterTuningJob", "sagemaker:listTransformJobs", "sagemaker:listWorkteams", "sdb:domainMetadata", "sdb:listDomains", "secretsmanager:describeSecret", "secretsmanager:getResourcePolicy", "secretsmanager:listSecretVersionIds", "secretsmanager:listSecrets", "securityhub:getEnabledStandards", "securityhub:getFindings", "securityhub:getInsightResults", "securityhub:getInsights", "securityhub:getMasterAccount", "securityhub:getMembers", "securityhub:listEnabledProductsForImport", "securityhub:listInvitations", "securityhub:listMembers", "servicecatalog:describeConstraint", "servicecatalog:describePortfolio", "servicecatalog:describeProduct", "servicecatalog:describeProductAsAdmin", "servicecatalog:describeProductView", "servicecatalog:describeProvisioningArtifact", "servicecatalog:describeProvisioningParameters", "servicecatalog:describeRecord", "servicecatalog:listAcceptedPortfolioShares", "servicecatalog:listConstraintsForPortfolio", "servicecatalog:listLaunchPaths", "servicecatalog:listPortfolioAccess", "servicecatalog:listPortfolios", "servicecatalog:listPortfoliosForProduct", "servicecatalog:listPrincipalsForPortfolio", "servicecatalog:listProvisioningArtifacts", "servicecatalog:listRecordHistory", "servicecatalog:scanProvisionedProducts", "servicecatalog:searchProducts", "servicequotas:getAWSDefaultServiceQuota", "servicequotas:getAssociationForServiceQuotaTemplate", "servicequotas:getRequestedServiceQuotaChange", "servicequotas:getServiceQuota", "servicequotas:getServiceQuotaIncreaseRequestFromTemplate", "servicequotas:listAWSDefaultServiceQuotas", "servicequotas:listRequestedServiceQuotaChangeHistory", "servicequotas:listRequestedServiceQuotaChangeHistoryByQuota", "servicequotas:listServiceQuotaIncreaseRequestsInTemplate", "servicequotas:listServiceQuotas", "servicequotas:listServices", "ses:describeActiveReceiptRuleSet", "ses:describeReceiptRule", "ses:describeReceiptRuleSet", "ses:getIdentityDkimAttributes", "ses:getIdentityMailFromDomainAttributes", "ses:getIdentityNotificationAttributes", "ses:getIdentityPolicies", "ses:getIdentityVerificationAttributes", "ses:getSendQuota", "ses:getSendStatistics", "ses:listIdentities", "ses:listIdentityPolicies", "ses:listReceiptFilters", "ses:listReceiptRuleSets", "ses:listVerifiedEmailAddresses", "shield:describeAttack", "shield:describeProtection", "shield:describeSubscription", "shield:listAttacks", "shield:listProtections", "sms:getConnectors", "sms:getReplicationJobs", "sms:getReplicationRuns", "sms:getServers", "snowball:describeAddress", "snowball:describeAddresses", "snowball:describeJob", "snowball:getSnowballUsage", "snowball:listJobs", "sns:checkIfPhoneNumberIsOptedOut", "sns:getEndpointAttributes", "sns:getPlatformApplicationAttributes", "sns:getSMSAttributes", "sns:getSubscriptionAttributes", "sns:getTopicAttributes", "sns:listEndpointsByPlatformApplication", "sns:listPhoneNumbersOptedOut", "sns:listPlatformApplications", "sns:listSubscriptions", "sns:listSubscriptionsByTopic", "sns:listTopics", "sqs:getQueueAttributes", "sqs:getQueueUrl", "sqs:listDeadLetterSourceQueues", "sqs:listQueues", "ssm:describeActivations", "ssm:describeAssociation", "ssm:describeAutomationExecutions", "ssm:describeAvailablePatches", "ssm:describeDocument", "ssm:describeDocumentPermission", "ssm:describeEffectiveInstanceAssociations", "ssm:describeEffectivePatchesForPatchBaseline", "ssm:describeInstanceAssociationsStatus", "ssm:describeInstanceInformation", "ssm:describeInstancePatchStates", "ssm:describeInstancePatchStatesForPatchGroup", "ssm:describeInstancePatches", "ssm:describeMaintenanceWindowExecutionTaskInvocations", "ssm:describeMaintenanceWindowExecutionTasks", "ssm:describeMaintenanceWindowExecutions", "ssm:describeMaintenanceWindowTargets", "ssm:describeMaintenanceWindowTasks", "ssm:describeMaintenanceWindows", "ssm:describeParameters", "ssm:describePatchBaselines", "ssm:describePatchGroupState", "ssm:describePatchGroups", "ssm:getAutomationExecution", "ssm:getCommandInvocation", "ssm:getDefaultPatchBaseline", "ssm:getDeployablePatchSnapshotForInstance", "ssm:getInventorySchema", "ssm:getMaintenanceWindow", "ssm:getMaintenanceWindowExecution", "ssm:getMaintenanceWindowExecutionTask", "ssm:getPatchBaseline", "ssm:getPatchBaselineForPatchGroup", "ssm:listAssociations", "ssm:listCommandInvocations", "ssm:listCommands", "ssm:listDocumentVersions", "ssm:listDocuments", "ssm:listTagsForResource", "states:describeActivity", "states:describeExecution", "states:describeStateMachine", "states:getExecutionHistory", "states:listActivities", "states:listExecutions", "states:listStateMachines", "storagegateway:describeBandwidthRateLimit", "storagegateway:describeCache", "storagegateway:describeCachediSCSIVolumes", "storagegateway:describeGatewayInformation", "storagegateway:describeMaintenanceStartTime", "storagegateway:describeNFSFileShares", "storagegateway:describeSMBFileShares", "storagegateway:describeSMBSettings", "storagegateway:describeSnapshotSchedule", "storagegateway:describeStorediSCSIVolumes", "storagegateway:describeTapeArchives", "storagegateway:describeTapeRecoveryPoints", "storagegateway:describeTapes", "storagegateway:describeUploadBuffer", "storagegateway:describeVTLDevices", "storagegateway:describeWorkingStorage", "storagegateway:listFileShares", "storagegateway:listGateways", "storagegateway:listLocalDisks", "storagegateway:listTagsForResource", "storagegateway:listTapes", "storagegateway:listVolumeInitiators", "storagegateway:listVolumeRecoveryPoints", "storagegateway:listVolumes", "swf:countClosedWorkflowExecutions", "swf:countOpenWorkflowExecutions", "swf:countPendingActivityTasks", "swf:countPendingDecisionTasks", "swf:describeActivityType", "swf:describeDomain", "swf:describeWorkflowExecution", "swf:describeWorkflowType", "swf:getWorkflowExecutionHistory", "swf:listActivityTypes", "swf:listClosedWorkflowExecutions", "swf:listDomains", "swf:listOpenWorkflowExecutions", "swf:listWorkflowTypes", "transfer:describeServer", "transfer:describeUser", "transfer:listServers", "transfer:listTagsForResource", "transfer:listUsers", "waf-regional:getByteMatchSet", "waf-regional:getChangeTokenStatus", "waf-regional:getIPSet", "waf-regional:getRule", "waf-regional:getSqlInjectionMatchSet", "waf-regional:getWebACL", "waf-regional:getWebACLForResource", "waf-regional:listByteMatchSets", "waf-regional:listIPSets", "waf-regional:listResourcesForWebACL", "waf-regional:listRules", "waf-regional:listSqlInjectionMatchSets", "waf-regional:listWebACLs", "waf:getByteMatchSet", "waf:getChangeTokenStatus", "waf:getIPSet", "waf:getRule", "waf:getSampledRequests", "waf:getSizeConstraintSet", "waf:getSqlInjectionMatchSet", "waf:getWebACL", "waf:getXssMatchSet", "waf:listByteMatchSets", "waf:listIPSets", "waf:listRules", "waf:listSizeConstraintSets", "waf:listSqlInjectionMatchSets", "waf:listWebACLs", "waf:listXssMatchSets", "workdocs:checkAlias", "workdocs:describeAvailableDirectories", "workdocs:describeInstances", "worklink:describeAuditStreamConfiguration", "worklink:describeCompanyNetworkConfiguration", "worklink:describeDevice", "worklink:describeDevicePolicyConfiguration", "worklink:describeDomain", "worklink:describeFleetMetadata", "worklink:describeIdentityProviderConfiguration", "worklink:describeWebsiteCertificateAuthority", "worklink:listDevices", "worklink:listDomains", "worklink:listFleets", "worklink:listWebsiteAuthorizationProviders", "worklink:listWebsiteCertificateAuthorities", "workmail:describeGroup", "workmail:describeOrganization", "workmail:describeResource", "workmail:describeUser", "workmail:listAliases", "workmail:listGroupMembers", "workmail:listGroups", "workmail:listMailboxPermissions", "workmail:listOrganizations", "workmail:listResourceDelegates", "workmail:listResources", "workmail:listUsers", "workspaces:describeAccount", "workspaces:describeAccountModifications", "workspaces:describeIpGroups", "workspaces:describeTags", "workspaces:describeWorkspaceBundles", "workspaces:describeWorkspaceDirectories", "workspaces:describeWorkspaceImages", "workspaces:describeWorkspaces", "workspaces:describeWorkspacesConnectionStatus"], "Effect": "Allow", "Resource": ["*"]}]}, {"PolicyName": "AWSTrustedAdvisorServiceRolePolicy", "PolicyId": "ANPAJH4QJ2WMHBOB47BUE", "Arn": "arn:aws:iam::aws:policy/aws-service-role/AWSTrustedAdvisorServiceRolePolicy", "Path": "/aws-service-role/", "DefaultVersionId": "v7", "AttachmentCount": 1, "PermissionsBoundaryUsageCount": 0, "IsAttachable": true, "CreateDate": "2018-02-22 21:24:25+00:00", "UpdateDate": "2019-11-15 22:11:48+00:00", "Statement": [{"Action": ["autoscaling:DescribeAccountLimits", "autoscaling:DescribeAutoScalingGroups", "autoscaling:DescribeLaunchConfigurations", "cloudformation:DescribeAccountLimits", "cloudformation:DescribeStacks", "cloudformation:ListStacks", "cloudfront:ListDistributions", "cloudtrail:DescribeTrails", "cloudtrail:GetTrailStatus", "dynamodb:DescribeLimits", "dynamodb:DescribeTable", "dynamodb:ListTables", "ec2:DescribeAddresses", "ec2:DescribeReservedInstances", "ec2:DescribeInstances", "ec2:DescribeVpcs", "ec2:DescribeInternetGateways", "ec2:DescribeImages", "ec2:DescribeVolumes", "ec2:DescribeSecurityGroups", "ec2:DescribeReservedInstancesOfferings", "ec2:DescribeSnapshots", "ec2:DescribeVpnConnections", "ec2:DescribeVpnGateways", "ec2:DescribeLaunchTemplateVersions", "elasticloadbalancing:DescribeAccountLimits", "elasticloadbalancing:DescribeInstanceHealth", "elasticloadbalancing:DescribeLoadBalancerAttributes", "elasticloadbalancing:DescribeLoadBalancerPolicies", "elasticloadbalancing:DescribeLoadBalancerPolicyTypes", "elasticloadbalancing:DescribeLoadBalancers", "iam:GenerateCredentialReport", "iam:GetAccountPasswordPolicy", "iam:GetAccountSummary", "iam:GetCredentialReport", "iam:GetServerCertificate", "iam:ListServerCertificates", "kinesis:DescribeLimits", "rds:DescribeAccountAttributes", "rds:DescribeDBClusters", "rds:DescribeDBEngineVersions", "rds:DescribeDBInstances", "rds:DescribeDBParameterGroups", "rds:DescribeDBParameters", "rds:DescribeDBSecurityGroups", "rds:DescribeDBSnapshots", "rds:DescribeDBSubnetGroups", "rds:DescribeEngineDefaultParameters", "rds:DescribeEvents", "rds:DescribeOptionGroupOptions", "rds:DescribeOptionGroups", "rds:DescribeOrderableDBInstanceOptions", "rds:DescribeReservedDBInstances", "rds:DescribeReservedDBInstancesOfferings", "rds:ListTagsForResource", "redshift:DescribeClusters", "redshift:DescribeReservedNodeOfferings", "redshift:DescribeReservedNodes", "route53:GetAccountLimit", "route53:GetHealthCheck", "route53:GetHostedZone", "route53:ListHealthChecks", "route53:ListHostedZones", "route53:ListHostedZonesByName", "route53:ListResourceRecordSets", "s3:GetBucketAcl", "s3:GetBucketPolicy", "s3:GetBucketPolicyStatus", "s3:GetBucketLocation", "s3:GetBucketLogging", "s3:GetBucketVersioning", "s3:GetBucketPublicAccessBlock", "s3:ListBucket", "s3:ListAllMyBuckets", "ses:GetSendQuota", "sqs:ListQueues", "cloudwatch:GetMetricStatistics", "ce:GetReservationPurchaseRecommendation"], "Effect": "Allow", "Resource": "*"}]}, {"PolicyName": "AmazonInspectorServiceRolePolicy", "PolicyId": "ANPAJKBMSBWLU2TGXHHUQ", "Arn": "arn:aws:iam::aws:policy/aws-service-role/AmazonInspectorServiceRolePolicy", "Path": "/aws-service-role/", "DefaultVersionId": "v4", "AttachmentCount": 1, "PermissionsBoundaryUsageCount": 0, "IsAttachable": true, "CreateDate": "2017-11-21 15:48:27+00:00", "UpdateDate": "2018-05-10 18:36:01+00:00", "Statement": [{"Effect": "Allow", "Action": ["directconnect:DescribeConnections", "directconnect:DescribeDirectConnectGateways", "directconnect:DescribeDirectConnectGatewayAssociations", "directconnect:DescribeDirectConnectGatewayAttachments", "directconnect:DescribeVirtualGateways", "directconnect:DescribeVirtualInterfaces", "directconnect:DescribeTags", "ec2:DescribeAvailabilityZones", "ec2:DescribeCustomerGateways", "ec2:DescribeInstances", "ec2:DescribeTags", "ec2:DescribeInternetGateways", "ec2:DescribeNatGateways", "ec2:DescribeNetworkAcls", "ec2:DescribeNetworkInterfaces", "ec2:DescribePrefixLists", "ec2:DescribeRegions", "ec2:DescribeRouteTables", "ec2:DescribeSecurityGroups", "ec2:DescribeSubnets", "ec2:DescribeVpcEndpoints", "ec2:DescribeVpcPeeringConnections", "ec2:DescribeVpcs", "ec2:DescribeVpnConnections", "ec2:DescribeVpnGateways", "elasticloadbalancing:DescribeListeners", "elasticloadbalancing:DescribeLoadBalancers", "elasticloadbalancing:DescribeLoadBalancerAttributes", "elasticloadbalancing:DescribeRules", "elasticloadbalancing:DescribeTags", "elasticloadbalancing:DescribeTargetGroups", "elasticloadbalancing:DescribeTargetHealth"], "Resource": "*"}]}], "Roles": [{"Path": "/aws-service-role/inspector.amazonaws.com/", "RoleName": "AWSServiceRoleForAmazonInspector", "RoleId": "AROAUVJLWVJZIJETL4RPW", "Arn": "arn:aws:iam::320603597426:role/aws-service-role/inspector.amazonaws.com/AWSServiceRoleForAmazonInspector", "CreateDate": "2019-12-19 09:04:16+00:00", "AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "inspector.amazonaws.com"}, "Action": "sts:AssumeRole"}]}, "MaxSessionDuration": 3600, "AttachedPolicies": [{"PolicyName": "AmazonInspectorServiceRolePolicy", "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AmazonInspectorServiceRolePolicy"}], "RolePolicies": []}, {"Path": "/aws-service-role/elasticloadbalancing.amazonaws.com/", "RoleName": "AWSServiceRoleForElasticLoadBalancing", "RoleId": "AROAUVJLWVJZKLVLN2YLJ", "Arn": "arn:aws:iam::320603597426:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing", "CreateDate": "2019-12-19 12:55:59+00:00", "AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "elasticloadbalancing.amazonaws.com"}, "Action": "sts:AssumeRole"}]}, "Description": "Allows ELB to call AWS services on your behalf.", "MaxSessionDuration": 3600, "AttachedPolicies": [{"PolicyName": "AWSElasticLoadBalancingServiceRolePolicy", "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AWSElasticLoadBalancingServiceRolePolicy"}], "RolePolicies": []}, {"Path": "/aws-service-role/rds.amazonaws.com/", "RoleName": "AWSServiceRoleForRDS", "RoleId": "AROAUVJLWVJZFKZOYTEP5", "Arn": "arn:aws:iam::320603597426:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS", "CreateDate": "2019-12-19 12:55:59+00:00", "AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "rds.amazonaws.com"}, "Action": "sts:AssumeRole"}]}, "Description": "Allows Amazon RDS to manage AWS resources on your behalf", "MaxSessionDuration": 3600, "AttachedPolicies": [{"PolicyName": "AmazonRDSServiceRolePolicy", "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AmazonRDSServiceRolePolicy"}], "RolePolicies": []}, {"Path": "/aws-service-role/support.amazonaws.com/", "RoleName": "AWSServiceRoleForSupport", "RoleId": "AROAUVJLWVJZPCC5MLGDL", "Arn": "arn:aws:iam::320603597426:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport", "CreateDate": "2019-06-24 13:27:30+00:00", "AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "support.amazonaws.com"}, "Action": "sts:AssumeRole"}]}, "Description": "Enables resource access for AWS to provide billing, administrative and support services", "MaxSessionDuration": 3600, "AttachedPolicies": [{"PolicyName": "AWSSupportServiceRolePolicy", "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AWSSupportServiceRolePolicy"}], "RolePolicies": []}, {"Path": "/aws-service-role/trustedadvisor.amazonaws.com/", "RoleName": "AWSServiceRoleForTrustedAdvisor", "RoleId": "AROAUVJLWVJZLHSFEZCSN", "Arn": "arn:aws:iam::320603597426:role/aws-service-role/trustedadvisor.amazonaws.com/AWSServiceRoleForTrustedAdvisor", "CreateDate": "2019-06-24 13:27:30+00:00", "AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "trustedadvisor.amazonaws.com"}, "Action": "sts:AssumeRole"}]}, "Description": "Access for the AWS Trusted Advisor Service to help reduce cost, increase performance, and improve security of your AWS environment.", "MaxSessionDuration": 3600, "AttachedPolicies": [{"PolicyName": "AWSTrustedAdvisorServiceRolePolicy", "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AWSTrustedAdvisorServiceRolePolicy"}], "RolePolicies": []}, {"Path": "/", "RoleName": "cg-ec2-meek-role-cgid35u2lwu74p", "RoleId": "AROAUVJLWVJZKQHKBCNP3", "Arn": "arn:aws:iam::320603597426:role/cg-ec2-meek-role-cgid35u2lwu74p", "CreateDate": "2019-12-20 08:25:31+00:00", "AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "ec2.amazonaws.com"}, "Action": "sts:AssumeRole"}]}, "MaxSessionDuration": 3600, "AttachedPolicies": [{"PolicyName": "cg-ec2-meek-policy", "PolicyArn": "arn:aws:iam::320603597426:policy/cg-ec2-meek-policy"}], "RolePolicies": []}, {"Path": "/", "RoleName": "cg-ec2-mighty-role-cgid35u2lwu74p", "RoleId": "AROAUVJLWVJZE72653DVH", "Arn": "arn:aws:iam::320603597426:role/cg-ec2-mighty-role-cgid35u2lwu74p", "CreateDate": "2019-12-20 08:25:31+00:00", "AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "ec2.amazonaws.com"}, "Action": "sts:AssumeRole"}]}, "MaxSessionDuration": 3600, "AttachedPolicies": [{"PolicyName": "cg-ec2-mighty-policy", "PolicyArn": "arn:aws:iam::320603597426:policy/cg-ec2-mighty-policy"}], "RolePolicies": []}]}, "vpc": {"Vpcs": [{"CidrBlock": "10.0.0.0/16", "DhcpOptionsId": "dopt-b0aa6aca", "State": "available", "VpcId": "vpc-0c32d3e93e4bf0963", "OwnerId": "320603597426", "InstanceTenancy": "default", "CidrBlockAssociationSet": [{"AssociationId": "vpc-cidr-assoc-060c07921de8847d1", "CidrBlock": "10.0.0.0/16", "CidrBlockState": {"State": "associated"}}], "IsDefault": false, "Tags": [{"Key": "Name", "Value": "CloudGoat cgid35u2lwu74p VPC"}, {"Key": "Stack", "Value": "CloudGoat"}, {"Key": "Scenario", "Value": "iam-privesc-by-attachment"}]}]}, "routetable": {"RouteTables": [{"Associations": [{"Main": false, "RouteTableAssociationId": "rtbassoc-0745d15a5622e9998", "RouteTableId": "rtb-02ee932aa0d45ce46", "SubnetId": "subnet-07c891edf65af83d8", "AssociationState": {"State": "associated"}}], "PropagatingVgws": [], "RouteTableId": "rtb-02ee932aa0d45ce46", "Routes": [{"DestinationCidrBlock": "10.0.0.0/16", "GatewayId": "local", "Origin": "CreateRouteTable", "State": "active"}, {"DestinationCidrBlock": "0.0.0.0/0", "GatewayId": "igw-09bfa21a4d435148b", "Origin": "CreateRoute", "State": "active"}], "Tags": [{"Key": "Scenario", "Value": "iam-privesc-by-attachment"}, {"Key": "Stack", "Value": "CloudGoat"}, {"Key": "Name", "Value": "CloudGoat cgid35u2lwu74p Route Table for Public Subnet"}], "VpcId": "vpc-0c32d3e93e4bf0963", "OwnerId": "320603597426"}, {"Associations": [{"Main": true, "RouteTableAssociationId": "rtbassoc-0ee07e0f12645de55", "RouteTableId": "rtb-0c7cca2d988a36154", "AssociationState": {"State": "associated"}}], "PropagatingVgws": [], "RouteTableId": "rtb-0c7cca2d988a36154", "Routes": [{"DestinationCidrBlock": "10.0.0.0/16", "GatewayId": "local", "Origin": "CreateRouteTable", "State": "active"}], "Tags": [], "VpcId": "vpc-0c32d3e93e4bf0963", "OwnerId": "320603597426"}]}, "rds": {"Instances": {"DBInstances": []}, "SubnetGroups": {"DBSubnetGroups": []}}, "ebs": {"Volumes": [{"Attachments": [{"AttachTime": "2019-12-20 08:25:45+00:00", "Device": "/dev/sda1", "InstanceId": "i-00fe3b054d476aa76", "State": "attached", "VolumeId": "vol-09c5a3e47e183e05d", "DeleteOnTermination": true}], "AvailabilityZone": "us-east-1a", "CreateTime": "2019-12-20 08:25:45.531000+00:00", "Encrypted": false, "Size": 8, "SnapshotId": "snap-0b1f84f810682b7bf", "State": "in-use", "VolumeId": "vol-09c5a3e47e183e05d", "Iops": 100, "Tags": [{"Key": "Scenario", "Value": "iam-privesc-by-attachment"}, {"Key": "Stack", "Value": "CloudGoat"}, {"Key": "Name", "Value": "CloudGoat cgid35u2lwu74p EC2 Instance Root Device"}], "VolumeType": "gp2"}]}, "subnet": {"Subnets": [{"AvailabilityZone": "us-east-1a", "AvailabilityZoneId": "use1-az2", "AvailableIpAddressCount": 250, "CidrBlock": "10.0.10.0/24", "DefaultForAz": false, "MapPublicIpOnLaunch": true, "State": "available", "SubnetId": "subnet-07c891edf65af83d8", "VpcId": "vpc-0c32d3e93e4bf0963", "OwnerId": "320603597426", "AssignIpv6AddressOnCreation": false, "Ipv6CidrBlockAssociationSet": [], "Tags": [{"Key": "Name", "Value": "CloudGoat cgid35u2lwu74p Public Subnet"}, {"Key": "Scenario", "Value": "iam-privesc-by-attachment"}, {"Key": "Stack", "Value": "CloudGoat"}], "SubnetArn": "arn:aws:ec2:us-east-1:320603597426:subnet/subnet-07c891edf65af83d8"}]}, "vpcpeering": {"VpcPeeringConnections": []}, "interface": {"NetworkInterfaces": [{"Association": {"IpOwnerId": "amazon", "PublicDnsName": "ec2-34-205-31-72.compute-1.amazonaws.com", "PublicIp": "34.205.31.72"}, "Attachment": {"AttachTime": "2019-12-20 08:25:44+00:00", "AttachmentId": "eni-attach-046440ef5c09f7a72", "DeleteOnTermination": true, "DeviceIndex": 0, "InstanceId": "i-00fe3b054d476aa76", "InstanceOwnerId": "320603597426", "Status": "attached"}, "AvailabilityZone": "us-east-1a", "Description": "", "Groups": [{"GroupName": "cg-ec2-ssh-cgid35u2lwu74p", "GroupId": "sg-0de831d85612b0391"}, {"GroupName": "cg-ec2-http-cgid35u2lwu74p", "GroupId": "sg-0efc88dce87985628"}], "InterfaceType": "interface", "Ipv6Addresses": [], "MacAddress": "12:f4:d6:41:c6:b5", "NetworkInterfaceId": "eni-09870edb4a7b2e8dc", "OwnerId": "320603597426", "PrivateDnsName": "ip-10-0-10-11.ec2.internal", "PrivateIpAddress": "10.0.10.11", "PrivateIpAddresses": [{"Association": {"IpOwnerId": "amazon", "PublicDnsName": "ec2-34-205-31-72.compute-1.amazonaws.com", "PublicIp": "34.205.31.72"}, "Primary": true, "PrivateDnsName": "ip-10-0-10-11.ec2.internal", "PrivateIpAddress": "10.0.10.11"}], "RequesterManaged": false, "SourceDestCheck": true, "Status": "in-use", "SubnetId": "subnet-07c891edf65af83d8", "TagSet": [], "VpcId": "vpc-0c32d3e93e4bf0963"}]}, "securitygroup": {"SecurityGroups": [{"Description": "default VPC security group", "GroupName": "default", "IpPermissions": [{"IpProtocol": "-1", "IpRanges": [], "Ipv6Ranges": [], "PrefixListIds": [], "UserIdGroupPairs": [{"GroupId": "sg-0c254f4b7db968ee5", "UserId": "320603597426"}]}], "OwnerId": "320603597426", "GroupId": "sg-0c254f4b7db968ee5", "IpPermissionsEgress": [{"IpProtocol": "-1", "IpRanges": [{"CidrIp": "0.0.0.0/0"}], "Ipv6Ranges": [], "PrefixListIds": [], "UserIdGroupPairs": []}], "VpcId": "vpc-0c32d3e93e4bf0963"}, {"Description": "CloudGoat cgid35u2lwu74p Security Group for EC2 Instance over SSH", "GroupName": "cg-ec2-ssh-cgid35u2lwu74p", "IpPermissions": [{"FromPort": 22, "IpProtocol": "tcp", "IpRanges": [{"CidrIp": "0.0.0.0/0"}], "Ipv6Ranges": [], "PrefixListIds": [], "ToPort": 22, "UserIdGroupPairs": []}], "OwnerId": "320603597426", "GroupId": "sg-0de831d85612b0391", "IpPermissionsEgress": [{"IpProtocol": "-1", "IpRanges": [{"CidrIp": "0.0.0.0/0"}], "Ipv6Ranges": [], "PrefixListIds": [], "UserIdGroupPairs": []}], "Tags": [{"Key": "Name", "Value": "cg-ec2-ssh-cgid35u2lwu74p"}, {"Key": "Scenario", "Value": "iam-privesc-by-attachment"}, {"Key": "Stack", "Value": "CloudGoat"}], "VpcId": "vpc-0c32d3e93e4bf0963"}, {"Description": "CloudGoat cgid35u2lwu74p Security Group for EC2 Instance over HTTP", "GroupName": "cg-ec2-http-cgid35u2lwu74p", "IpPermissions": [{"FromPort": 80, "IpProtocol": "tcp", "IpRanges": [{"CidrIp": "0.0.0.0/0"}], "Ipv6Ranges": [], "PrefixListIds": [], "ToPort": 80, "UserIdGroupPairs": []}, {"FromPort": 443, "IpProtocol": "tcp", "IpRanges": [{"CidrIp": "0.0.0.0/0"}], "Ipv6Ranges": [], "PrefixListIds": [], "ToPort": 443, "UserIdGroupPairs": []}], "OwnerId": "320603597426", "GroupId": "sg-0efc88dce87985628", "IpPermissionsEgress": [{"IpProtocol": "-1", "IpRanges": [{"CidrIp": "0.0.0.0/0"}], "Ipv6Ranges": [], "PrefixListIds": [], "UserIdGroupPairs": []}], "Tags": [{"Key": "Scenario", "Value": "iam-privesc-by-attachment"}, {"Key": "Stack", "Value": "CloudGoat"}, {"Key": "Name", "Value": "cg-ec2-http-cgid35u2lwu74p"}], "VpcId": "vpc-0c32d3e93e4bf0963"}]}, "acl": {"NetworkAcls": [{"Associations": [{"NetworkAclAssociationId": "aclassoc-01d14df771752f401", "NetworkAclId": "acl-0b767fbddf0522716", "SubnetId": "subnet-07c891edf65af83d8"}], "Entries": [{"CidrBlock": "0.0.0.0/0", "Egress": true, "Protocol": "-1", "RuleAction": "allow", "RuleNumber": 100}, {"CidrBlock": "0.0.0.0/0", "Egress": true, "Protocol": "-1", "RuleAction": "deny", "RuleNumber": 32767}, {"CidrBlock": "0.0.0.0/0", "Egress": false, "Protocol": "-1", "RuleAction": "allow", "RuleNumber": 100}, {"CidrBlock": "0.0.0.0/0", "Egress": false, "Protocol": "-1", "RuleAction": "deny", "RuleNumber": 32767}], "IsDefault": true, "NetworkAclId": "acl-0b767fbddf0522716", "Tags": [], "VpcId": "vpc-0c32d3e93e4bf0963", "OwnerId": "320603597426"}]}, "kms": {"Keys": [{"KeyId": "f5661450-4f9e-4433-a8a1-074d85378e0f", "KeyArn": "arn:aws:kms:us-east-1:320603597426:key/f5661450-4f9e-4433-a8a1-074d85378e0f", "Policy": "{\n  \"Version\" : \"2012-10-17\",\n  \"Id\" : \"auto-awslambda\",\n  \"Statement\" : [ {\n    \"Sid\" : \"Allow access through AWS Lambda for all principals in the account that are authorized to use AWS Lambda\",\n    \"Effect\" : \"Allow\",\n    \"Principal\" : {\n      \"AWS\" : \"*\"\n    },\n    \"Action\" : [ \"kms:Encrypt\", \"kms:Decrypt\", \"kms:ReEncrypt*\", \"kms:GenerateDataKey*\", \"kms:CreateGrant\", \"kms:DescribeKey\" ],\n    \"Resource\" : \"*\",\n    \"Condition\" : {\n      \"StringEquals\" : {\n        \"kms:ViaService\" : \"lambda.us-east-1.amazonaws.com\",\n        \"kms:CallerAccount\" : \"320603597426\"\n      }\n    }\n  }, {\n    \"Sid\" : \"Allow direct access to key metadata to the account\",\n    \"Effect\" : \"Allow\",\n    \"Principal\" : {\n      \"AWS\" : \"arn:aws:iam::320603597426:root\"\n    },\n    \"Action\" : [ \"kms:Describe*\", \"kms:Get*\", \"kms:List*\", \"kms:RevokeGrant\" ],\n    \"Resource\" : \"*\"\n  } ]\n}"}]}, "elbv2": {"LoadBalancers": [], "TargetGroups": []}, "instance": {"Reservations": [{"Groups": [], "Instances": [{"AmiLaunchIndex": 0, "ImageId": "ami-0a313d6098716f372", "InstanceId": "i-00b13715db393fb93", "InstanceType": "t2.micro", "KeyName": "cg-ec2-key-pair-cgid86jr793c39", "LaunchTime": "2019-12-20 07:27:34+00:00", "Monitoring": {"State": "disabled"}, "Placement": {"AvailabilityZone": "us-east-1a", "GroupName": "", "Tenancy": "default"}, "PrivateDnsName": "", "ProductCodes": [], "PublicDnsName": "", "State": {"Code": 48, "Name": "terminated"}, "StateTransitionReason": "User initiated (2019-12-20 07:37:52 GMT)", "Architecture": "x86_64", "BlockDeviceMappings": [], "ClientToken": "", "EbsOptimized": false, "EnaSupport": true, "Hypervisor": "xen", "NetworkInterfaces": [], "RootDeviceName": "/dev/sda1", "RootDeviceType": "ebs", "SecurityGroups": [], "StateReason": {"Code": "Client.UserInitiatedShutdown", "Message": "Client.UserInitiatedShutdown: User initiated shutdown"}, "Tags": [{"Key": "Stack", "Value": "CloudGoat"}, {"Key": "Name", "Value": "ec2-vulnerable-proxy-server-cgid86jr793c39"}, {"Key": "Scenario", "Value": "cloud-breach-s3"}], "VirtualizationType": "hvm", "CpuOptions": {"CoreCount": 1, "ThreadsPerCore": 1}, "CapacityReservationSpecification": {"CapacityReservationPreference": "open"}, "HibernationOptions": {"Configured": false}, "MetadataOptions": {"State": "pending", "HttpTokens": "optional", "HttpPutResponseHopLimit": 1, "HttpEndpoint": "enabled"}, "IsWindows": false}], "OwnerId": "320603597426", "ReservationId": "r-0f489beaf55508cb5"}, {"Groups": [], "Instances": [{"AmiLaunchIndex": 0, "ImageId": "ami-0a313d6098716f372", "InstanceId": "i-06ec58c10b50190fe", "InstanceType": "t2.micro", "LaunchTime": "2019-12-20 07:40:06+00:00", "Monitoring": {"State": "disabled"}, "Placement": {"AvailabilityZone": "us-east-1a", "GroupName": "", "Tenancy": "default"}, "PrivateDnsName": "", "ProductCodes": [], "PublicDnsName": "", "State": {"Code": 48, "Name": "terminated"}, "StateTransitionReason": "User initiated (2019-12-20 08:00:34 GMT)", "Architecture": "x86_64", "BlockDeviceMappings": [], "ClientToken": "", "EbsOptimized": false, "EnaSupport": true, "Hypervisor": "xen", "NetworkInterfaces": [], "RootDeviceName": "/dev/sda1", "RootDeviceType": "ebs", "SecurityGroups": [], "StateReason": {"Code": "Client.UserInitiatedShutdown", "Message": "Client.UserInitiatedShutdown: User initiated shutdown"}, "Tags": [{"Key": "Stack", "Value": "CloudGoat"}, {"Key": "Scenario", "Value": "iam-privesc-by-attachment"}, {"Key": "Name", "Value": "CloudGoat cgid580vwtjybr super-critical-security-server EC2 Instance"}], "VirtualizationType": "hvm", "CpuOptions": {"CoreCount": 1, "ThreadsPerCore": 1}, "CapacityReservationSpecification": {"CapacityReservationPreference": "open"}, "HibernationOptions": {"Configured": false}, "MetadataOptions": {"State": "pending", "HttpTokens": "optional", "HttpPutResponseHopLimit": 1, "HttpEndpoint": "enabled"}, "IsWindows": false}], "OwnerId": "320603597426", "ReservationId": "r-0922abdb04a5826bc"}, {"Groups": [], "Instances": [{"AmiLaunchIndex": 0, "ImageId": "ami-0a313d6098716f372", "InstanceId": "i-0a258940078f3de75", "InstanceType": "t2.micro", "KeyName": "cg-ec2-key-pair-cgidyk5evuib5j", "LaunchTime": "2019-12-20 08:02:32+00:00", "Monitoring": {"State": "disabled"}, "Placement": {"AvailabilityZone": "us-east-1a", "GroupName": "", "Tenancy": "default"}, "PrivateDnsName": "", "ProductCodes": [], "PublicDnsName": "", "State": {"Code": 48, "Name": "terminated"}, "StateTransitionReason": "User initiated (2019-12-20 08:18:37 GMT)", "Architecture": "x86_64", "BlockDeviceMappings": [], "ClientToken": "", "EbsOptimized": false, "EnaSupport": true, "Hypervisor": "xen", "NetworkInterfaces": [], "RootDeviceName": "/dev/sda1", "RootDeviceType": "ebs", "SecurityGroups": [], "StateReason": {"Code": "Client.UserInitiatedShutdown", "Message": "Client.UserInitiatedShutdown: User initiated shutdown"}, "Tags": [{"Key": "Scenario", "Value": "ec2-ssrf"}, {"Key": "Stack", "Value": "CloudGoat"}, {"Key": "Name", "Value": "cg-ubuntu-ec2-cgidyk5evuib5j"}], "VirtualizationType": "hvm", "CpuOptions": {"CoreCount": 1, "ThreadsPerCore": 1}, "CapacityReservationSpecification": {"CapacityReservationPreference": "open"}, "HibernationOptions": {"Configured": false}, "MetadataOptions": {"State": "pending", "HttpTokens": "optional", "HttpPutResponseHopLimit": 1, "HttpEndpoint": "enabled"}, "IsWindows": false}], "OwnerId": "320603597426", "ReservationId": "r-0f85ce9e5e847311c"}, {"Groups": [], "Instances": [{"AmiLaunchIndex": 0, "ImageId": "ami-0a313d6098716f372", "InstanceId": "i-01d3429f265eef0e2", "InstanceType": "t2.micro", "KeyName": "cg-ec2-key-pair-cgidwoj1fm6fdf", "LaunchTime": "2019-12-20 08:19:58+00:00", "Monitoring": {"State": "disabled"}, "Placement": {"AvailabilityZone": "us-east-1a", "GroupName": "", "Tenancy": "default"}, "PrivateDnsName": "", "ProductCodes": [], "PublicDnsName": "", "State": {"Code": 48, "Name": "terminated"}, "StateTransitionReason": "User initiated (2019-12-20 08:23:59 GMT)", "Architecture": "x86_64", "BlockDeviceMappings": [], "ClientToken": "", "EbsOptimized": false, "EnaSupport": true, "Hypervisor": "xen", "NetworkInterfaces": [], "RootDeviceName": "/dev/sda1", "RootDeviceType": "ebs", "SecurityGroups": [], "StateReason": {"Code": "Client.UserInitiatedShutdown", "Message": "Client.UserInitiatedShutdown: User initiated shutdown"}, "Tags": [{"Key": "Stack", "Value": "CloudGoat"}, {"Key": "Name", "Value": "ec2-vulnerable-proxy-server-cgidwoj1fm6fdf"}, {"Key": "Scenario", "Value": "cloud-breach-s3"}], "VirtualizationType": "hvm", "CpuOptions": {"CoreCount": 1, "ThreadsPerCore": 1}, "CapacityReservationSpecification": {"CapacityReservationPreference": "open"}, "HibernationOptions": {"Configured": false}, "MetadataOptions": {"State": "pending", "HttpTokens": "optional", "HttpPutResponseHopLimit": 1, "HttpEndpoint": "enabled"}, "IsWindows": false}], "OwnerId": "320603597426", "ReservationId": "r-08119b03dbf028fe3"}, {"Groups": [], "Instances": [{"AmiLaunchIndex": 0, "ImageId": "ami-0a313d6098716f372", "InstanceId": "i-00fe3b054d476aa76", "InstanceType": "t2.micro", "LaunchTime": "2019-12-20 08:25:44+00:00", "Monitoring": {"State": "disabled"}, "Placement": {"AvailabilityZone": "us-east-1a", "GroupName": "", "Tenancy": "default"}, "PrivateDnsName": "ip-10-0-10-11.ec2.internal", "PrivateIpAddress": "10.0.10.11", "ProductCodes": [], "PublicDnsName": "ec2-34-205-31-72.compute-1.amazonaws.com", "PublicIpAddress": "34.205.31.72", "State": {"Code": 16, "Name": "running"}, "StateTransitionReason": "", "SubnetId": "subnet-07c891edf65af83d8", "VpcId": "vpc-0c32d3e93e4bf0963", "Architecture": "x86_64", "BlockDeviceMappings": [{"DeviceName": "/dev/sda1", "Ebs": {"AttachTime": "2019-12-20 08:25:45+00:00", "DeleteOnTermination": true, "Status": "attached", "VolumeId": "vol-09c5a3e47e183e05d"}}], "ClientToken": "", "EbsOptimized": false, "EnaSupport": true, "Hypervisor": "xen", "NetworkInterfaces": [{"Association": {"IpOwnerId": "amazon", "PublicDnsName": "ec2-34-205-31-72.compute-1.amazonaws.com", "PublicIp": "34.205.31.72"}, "Attachment": {"AttachTime": "2019-12-20 08:25:44+00:00", "AttachmentId": "eni-attach-046440ef5c09f7a72", "DeleteOnTermination": true, "DeviceIndex": 0, "Status": "attached"}, "Description": "", "Groups": [{"GroupName": "cg-ec2-ssh-cgid35u2lwu74p", "GroupId": "sg-0de831d85612b0391"}, {"GroupName": "cg-ec2-http-cgid35u2lwu74p", "GroupId": "sg-0efc88dce87985628"}], "Ipv6Addresses": [], "MacAddress": "12:f4:d6:41:c6:b5", "NetworkInterfaceId": "eni-09870edb4a7b2e8dc", "OwnerId": "320603597426", "PrivateDnsName": "ip-10-0-10-11.ec2.internal", "PrivateIpAddress": "10.0.10.11", "PrivateIpAddresses": [{"Association": {"IpOwnerId": "amazon", "PublicDnsName": "ec2-34-205-31-72.compute-1.amazonaws.com", "PublicIp": "34.205.31.72"}, "Primary": true, "PrivateDnsName": "ip-10-0-10-11.ec2.internal", "PrivateIpAddress": "10.0.10.11"}], "SourceDestCheck": true, "Status": "in-use", "SubnetId": "subnet-07c891edf65af83d8", "VpcId": "vpc-0c32d3e93e4bf0963", "InterfaceType": "interface"}], "RootDeviceName": "/dev/sda1", "RootDeviceType": "ebs", "SecurityGroups": [{"GroupName": "cg-ec2-ssh-cgid35u2lwu74p", "GroupId": "sg-0de831d85612b0391"}, {"GroupName": "cg-ec2-http-cgid35u2lwu74p", "GroupId": "sg-0efc88dce87985628"}], "SourceDestCheck": true, "Tags": [{"Key": "Stack", "Value": "CloudGoat"}, {"Key": "Name", "Value": "CloudGoat cgid35u2lwu74p super-critical-security-server EC2 Instance"}, {"Key": "Scenario", "Value": "iam-privesc-by-attachment"}], "VirtualizationType": "hvm", "CpuOptions": {"CoreCount": 1, "ThreadsPerCore": 1}, "CapacityReservationSpecification": {"CapacityReservationPreference": "open"}, "HibernationOptions": {"Configured": false}, "MetadataOptions": {"State": "applied", "HttpTokens": "optional", "HttpPutResponseHopLimit": 1, "HttpEndpoint": "enabled"}, "IsWindows": false}], "OwnerId": "320603597426", "ReservationId": "r-05bd98057286e8774"}]}}
